{% extends 'BackendBundle::layout.html.twig' %}

{% block custom_css %}
    {{ parent() }}

    <!-- select2 Styles -->
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/select2/select2.min.css') }}"
          type="text/css"/>

    <!-- selectize Styles -->
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/selectize/selectize.css') }}"
          type="text/css"/>
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/selectize/selectize.default.css') }}"
          type="text/css"/>

    <!-- iCkeck Styles -->
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/iCheck/custom.css') }}"
          type="text/css">

    <!-- Summernote Styles -->
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/summernote/summernote.css') }}"
          type="text/css">
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/summernote/summernote-bs3.css') }}"
          type="text/css">

    <!-- codemirror Styles -->
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/codemirror/codemirror.css') }}"
          type="text/css"/>
    <link rel="stylesheet" href="{{ asset('bundles/backend/js/plugins/codemirror/addon/hint/show-hint.css') }}"
          type="text/css"/>
    <link rel="stylesheet" href="{{ asset('bundles/backend/css/plugins/codemirror/dracula.css') }}"
          type="text/css"/>

{% endblock %}

        {% block active_mails %}active{% endblock %}

        {% block page_heading_title %}
            {{ 'Send Mail' | trans({}, 'mailsbackend') }}
        {% endblock %}

        {% block page_heading_action_button %}
            <div class="pull-right title-action">
                <a href="{{ path('backend_homepage') }}" class="btn btn-danger btn-sm" data-toggle="tooltip"
                   data-placement="top" title="Discard email">
                    <i class="fa fa-times"></i> {{ 'Discard' | trans({}, 'mailsbackend') }}
                </a>
            </div>
        {% endblock %}

        {% block page_content %}

            {{ form_start(form, {'attr': {'class':'form-horizontal'}}) }}

            <div class="mail-box">

                <div class="mail-body">

                    <div class="form-group{% if(form.registeredUsers.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <label for=""
                               class="col-md-2 control-label">{{ form_label(form.registeredUsers) }}</label>

                        <div class="col-md-6">
                            {{ form_widget(form.registeredUsers, { 'attr': {
                                'class' : 'form-control select2-field-registered',
                                'style' : 'width: 100%'}}) }}
                            {% if form.registeredUsers.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.registeredUsers.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>

                    <div class="form-group{% if(form.subscribedUsers.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <label for=""
                               class="col-md-2 control-label">{{ form_label(form.subscribedUsers) }}</label>

                        <div class="col-md-6">
                            {{ form_widget(form.subscribedUsers, { 'attr': {
                                'class' : 'form-control select2-field-subscribed',
                                'style' : 'width: 100%'}}) }}
                            {% if form.subscribedUsers.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.subscribedUsers.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>

                    <div class="form-group{% if(form.customAddresses.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <label for=""
                               class="col-md-2 control-label">{{ form_label(form.customAddresses) }}</label>

                        <div class="col-md-6">
                            {{ form_widget(form.customAddresses, { 'attr': {
                                'class' : 'selectize-custom-address',
                                'placeholder' : 'Write some addresses ...' | trans({}, 'mailsbackend') }}) }}
                            {% if form.customAddresses.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.customAddresses.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>

                    <div class="form-group{% if(form.groupOfUsers.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <label for=""
                               class="col-md-2 control-label">{{ form_label(form.groupOfUsers) }}</label>

                        <div class="col-md-6">
                            {{ form_widget(form.groupOfUsers, { 'attr': {
                                'class' : 'form-control select2-field-group',
                                'style' : 'width: 100%'}}) }}
                            {% if form.groupOfUsers.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.groupOfUsers.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>

                    <div class="form-group{% if(form.categories.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <label for=""
                               class="col-md-2 control-label">{{ form_label(form.categories) }}</label>

                        <div class="col-md-6">
                            {{ form_widget(form.categories, { 'attr': {
                                'class' : 'form-control select2-field-category',
                                'style' : 'width: 100%'}}) }}
                            {% if form.categories.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.categories.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>

                    <div class="form-group{% if(form.deals.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <label for=""
                               class="col-md-2 control-label">{{ form_label(form.deals) }}</label>

                        <div class="col-md-6">
                            {{ form_widget(form.deals, { 'attr': {
                                'class' : 'form-control select2-field-deals',
                                'style' : 'width: 100%'}}) }}
                            {% if form.deals.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.deals.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>

                    <div class="form-group{% if(form.template.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <label for=""
                               class="col-md-2 control-label">{{ form_label(form.template) }}</label>

                        <div class="col-md-1">
                            {{ form_widget(form.template, { 'attr': {
                                'class' : 'form-control i-checks',
                                'style' : 'width: 100%'}}) }}
                            {% if form.template.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.template.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}
                        </div>
                        <span class="text-muted">
                            <i class="fa fa-info-circle"></i>
                            {{ 'Send template email to the recipients' | trans({}, 'businessbackend') }}
                        </span>
                    </div>
                    <div class="hr-line-dashed"></div>

                    <div id="email-template" class="hidden">
                        <div class="form-group{% if(form.subject.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                            <label for=""
                                   class="col-md-2 control-label">{{ form_label(form.subject) }}</label>

                            <div class="col-md-6">
                                {{ form_widget(form.subject, { 'attr': {
                                    'class' : 'form-control',
                                    'style' : 'width: 100%'}}) }}
                                {% if form.subject.vars['errors']|length > 0 %}
                                    <ul class="message">
                                        {% for error in form.subject.vars['errors'] %}
                                            <li>{{ error.message }}</li>
                                        {% endfor %}
                                    </ul>
                                {% endif %}
                            </div>
                        </div>
                        <div class="hr-line-dashed"></div>
                        <div class="row m-b-sm">
                            <div class="col-md-8 col-md-offset-2">
                                <a class="btn btn-white btn-sm" data-toggle="modal" data-placement="top"
                                   title="Image Gallery" data-target="#image-gallery" href="#">
                                    <i class="fa fa-picture-o"></i>
                                </a>
                            </div>
                        </div>

                        <div class="form-group{% if(form.htmlText.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                            <label for=""
                                   class="col-md-2 control-label">{{ form_label(form.htmlText) }}</label>

                            <div class="col-md-6">
                                {{ form_widget(form.htmlText, { 'attr': {
                                    'class' : 'form-control',
                                    'style' : 'width: 100%'}}) }}
                                {% if form.htmlText.vars['errors']|length > 0 %}
                                    <ul class="message">
                                        {% for error in form.htmlText.vars['errors'] %}
                                            <li>{{ error.message }}</li>
                                        {% endfor %}
                                    </ul>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mail-text h-200">
                    <div class="form-group{% if(form.message.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                        <div class="col-md-12">

                            {% if form.message.vars['errors']|length > 0 %}
                                <ul class="message">
                                    {% for error in form.message.vars['errors'] %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            {% endif %}

                            <div class="hidden">
                                <h3>Hello Jonathan! </h3>
                                dummy text of the printing and typesetting industry. <strong>Lorem Ipsum has been the
                                    industry's</strong> standard dummy text ever since the 1500s,
                                when an unknown printer took a galley of type and scrambled it to make a type specimen
                                book. It
                                has survived not only five centuries, but also the leap into electronic
                                typesetting, remaining essentially unchanged. It was popularised in the 1960s with the
                                release
                                of Letraset sheets containing Lorem Ipsum passages, and more recently with
                                <br/>
                                <br/>

                            </div>

                            {{ form_widget(form.message, { 'attr': {
                                'class' : 'form-control large-height summernote',
                                'placeholder' : 'Write your message here ...' | trans({}, 'mailsbackend') }}) }}
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div class="mail-body text-left tooltip-demo">
                    <a title="{{ 'Dashboard' | trans({}, 'mailsbackend') }}" class="btn btn-success"
                       href="{{ path('backend_homepage') }}" data-toggle="tooltip" data-placement="top">
                        <span class="fa fa-th-large"></span>
                        {{ 'Dashboard' | trans({}, 'mailsbackend') }}
                    </a>
                    <button title="{{ 'Send' | trans({}, 'mailsbackend') }}" id="btn-mails-send" class="btn btn-primary"
                            type="submit" data-toggle="tooltip" data-placement="top">
                        <span class="fa fa-send"></span> {{ 'Send' | trans({}, 'mailsbackend') }}
                    </button>
                </div>

                <div class="clearfix">
                    {{ form(form) }}
                </div>

            </div>

            {{ form_end(form) }}

            <div class="modal inmodal fade" id="image-gallery" tabindex="-1" role="dialog"
                 aria-hidden="true">
                <div class="modal-dialog modal-lg90">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal"><span
                                        aria-hidden="true">&times;</span><span class="sr-only">{{ 'Close' | trans({}, 'generalbackend') }}</span>
                            </button>
                            <h4 class="modal-title">{{ 'Image Gallery' | trans({}, 'generalbackend') }}</h4>
                            <small class="font-bold">
                                {{ 'Manage all images of the Gallery.' | trans({}, 'generalbackend') }} <br/>
                                {{ 'You can remove only the images that have been added in the creating/editing context.' | trans({}, 'generalbackend') }}
                            </small>
                        </div>
                        <div class="modal-body">

                            <div id="image-gallery-item-list">
                                {% for image in post_images %}

                                    <div class="file-box">
                                        <div class="file">
                                            <a class="file-link" href="#">
                                                <span class="corner"></span>

                                                <div class="image">
                                                    <img alt="{{ image.description }}" class="img-responsive"
                                                         src="{{ asset('images/post/gallery/' ~ image.imgName) }}">
                                                </div>
                                                <div class="file-name">
                                                    {{ image.imgName }}
                                                </div>
                                            </a>
                                        </div>
                                    </div>

                                {% endfor %}
                            </div>

                            <div class="ibox collapsed">
                                <div class="ibox-title">
                                    <h5>{{ 'Upload Image' | trans({}, 'generalbackend') }}</h5>
                                    <div class="ibox-tools">
                                        <a class="btn btn-xs collapse-link">
                                            <i class="fa fa-chevron-up"></i>
                                        </a>
                                    </div>

                                </div>
                                <div class="ibox-content">
                                    <div>

                                        {{ form_start(image_form, {'attr': {'class':'form-horizontal' }}) }}

                                        <div class="form-group{% if(image_form.imgFile.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                                            <label for=""
                                                   class="col-md-2 control-label">{{ form_label(image_form.imgFile) }}</label>

                                            <div class="col-md-10">
                                                {{ form_widget(image_form.imgFile, { 'attr': {'class' : 'form-control'}}) }}
                                                <p class="text-success"><small>{{ 'You can upload images with a 5MB max of weight and a quadratic max dimentions of 2500 pixels.' | trans({}, 'generalbackend') }}</small></p>
                                                <ul id="img-file-error" class="hidden message"><li></li></ul>
                                            </div>
                                        </div>
                                        <div class="hr-line-dashed"></div>

                                        <div class="form-group{% if(image_form.name.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                                            <label for="" class="col-md-2 control-label">{{ form_label(image_form.name) }}</label>

                                            <div class="col-md-10">
                                                {{ form_widget(image_form.name, { 'attr': {'class' : 'form-control'}}) }}
                                                <ul id="img-name-error" class="hidden message"><li></li></ul>
                                            </div>
                                        </div>
                                        <div class="hr-line-dashed"></div>

                                        <div class="form-group{% if(image_form.description.vars['errors']|length > 0) %} {{ ' has-error' }} {% endif %}">
                                            <label for=""
                                                   class="col-md-2 control-label">{{ form_label(image_form.description) }}
                                            </label>

                                            <div class="col-md-10">
                                                {{ form_widget(image_form.description, { 'attr': {'class' : 'form-control'}}) }}
                                                {% if image_form.description.vars['errors']|length > 0 %}
                                                    <ul class="message">
                                                        {% for error in image_form.description.vars['errors'] %}
                                                            <li>{{ error.message }}</li>
                                                        {% endfor %}
                                                    </ul>
                                                {% endif %}
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-10 col-md-offset-2">
                                                <a href="#" id="image-gallery-upload" class="btn btn-success">
                                                    <span class="fa fa-arrow-circle-up"></span> {{ 'Upload' | trans({}, 'generalbackend') }}
                                                </a>
                                            </div>
                                        </div>

                                        <div class="hidden">{{ form_rest(image_form) }}</div>
                                        {{ form_end(image_form) }}
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                            </div>

                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-white" data-dismiss="modal">{{ 'Close' | trans({}, 'generalbackend') }}</button>
                            <button id="image-gallery-attach" type="button" class="btn btn-primary">{{ 'Insert file' | trans({}, 'generalbackend') }}</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="hidden">
                <input id="editor-content-coords" type="hidden" value=""/>
                <div id="code-to-insert" class="hidden"></div>
            </div>

            <div id="file-template" class="hidden">
                <div class="file-box" id="">
                    <div class="file">
                        <a class="file-link" href="#">
                            <span class="corner"></span>

                            <div class="image">
                                <img alt="" src="" class="img-responsive">
                            </div>
                            <div class="file-name">
                            </div>
                        </a>
                        <a href="#" class="btn btn-xs btn-danger delete-image" data-toggle="tooltip"
                           title="Delete" data-file-id="">
                            <i class="fa fa-trash"></i>
                        </a>
                    </div>
                </div>
            </div>

        {% endblock %}

    {% block custom_js %}
        {{ parent() }}

        <!-- select2 Scripts -->
        <script src="{{ asset('bundles/backend/js/plugins/select2/select2.full.min.js') }}"
                type="text/javascript"></script>
        <!-- selectize Scripts -->
        <script src="{{ asset('bundles/backend/js/plugins/selectize/selectize.min.js') }}"
                type="text/javascript"></script>
        <!-- iCheck Scripts -->
        <script src="{{ asset('bundles/backend/js/plugins/iCheck/icheck.min.js') }}"
                type="text/javascript"></script>
        <!-- Summernote Scripts -->
        <script src="{{ asset('bundles/backend/js/plugins/summernote/summernote.min.js') }}"
                type="text/javascript"></script>

        <!-- codemirror Scripts -->
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/codemirror.js') }}"
                type="text/javascript"></script>

        <script src="{{ asset('bundles/backend/js/plugins/codemirror/addon/selection/active-line.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/addon/edit/matchbrackets.js') }}"
                type="text/javascript"></script>

        <script src="{{ asset('bundles/backend/js/plugins/codemirror/addon/hint/css-hint.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/addon/hint/html-hint.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/addon/hint/javascript-hint.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/addon/hint/show-hint.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/addon/hint/xml-hint.js') }}"
                type="text/javascript"></script>

        <script src="{{ asset('bundles/backend/js/plugins/codemirror/mode/javascript/javascript.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/mode/css/css.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/mode/vbscript/vbscript.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/mode/xml/xml.js') }}"
                type="text/javascript"></script>
        <script src="{{ asset('bundles/backend/js/plugins/codemirror/mode/htmlmixed/htmlmixed.js') }}"
                type="text/javascript"></script>

    {% endblock %}

    {% block inline_js %}
        <script type="text/javascript">

            $(document).ready(function () {

                //  select2 scripts for select2 addresses field
                $(".select2-field-registered").select2({
                    placeholder: "-- {{ 'SELECT ADDRESSES' | trans({}, 'mailsbackend') }} --"
                });

                //  select2 scripts for select2 addresses field
                $(".select2-field-subscribed").select2({
                    placeholder: "-- {{ 'SELECT ADDRESSES' | trans({}, 'mailsbackend') }} --"
                });

                //  selectize scripts for tags
                $(".selectize-custom-address").selectize({
                    plugins: ['remove_button', 'restore_on_backspace'],
                    delimiter: ';',
                    persist: false,
                    create: true
                });

                //  select2 scripts for select2 fields
                $(".select2-field-group").select2();

                //  select2 scripts for select2 category field
                $(".select2-field-category").select2({
                    placeholder: "-- {{ 'SELECT CATEGORY' | trans({}, 'mailsbackend') }} --"
                });

                //  select2 scripts for select2 deals field
                $(".select2-field-deals").select2({
                    placeholder: "-- {{ 'SELECT DEALS' | trans({}, 'mailsbackend') }} --"
                });

                // launch native events
                $('#frontend_bundle_mails_send_template').on('ifChanged', function (event) {
                    $(event.target).trigger('change');
                });

                // For oncheck callback
                $('#frontend_bundle_mails_send_template').on('ifChecked', function () {
                    $('#email-template').toggleClass('hidden');
                })

                // For onUncheck callback
                $('#frontend_bundle_mails_send_template').on('ifUnchecked', function () {
                    $('#email-template').toggleClass('hidden');
                })

                $('#btn-mails-send').click(function () {
                    // retrieving values of email of destinations
                    var registeredValue = $(".select2-field-registered").val();
                    var subscribedValue = $(".select2-field-subscribed").val();
                    var customAddressValue = $(".selectize-custom-address").val();
                    var groupValue = $(".select2-field-group").val();
                    var categoryValue = $(".select2-field-category").val();

                    // retrieving message content from summernote
                    var messageContent = $('.note-editable').html();
                    var textmessageContent = $('.note-editable').text();
                    $('#frontend_bundle_mails_send_message').html(messageContent);
                    var sendTemplate = $('#frontend_bundle_mails_send_template').is(':checked');
                    var htmlTemplate = editorContent.getValue();

//                    alert(textmessageContent);

                    // verifying issues in email sending
                    if (registeredValue == null
                        && subscribedValue == null
                        && customAddressValue.length <= 0
                        && groupValue.length <= 0
                        && categoryValue == null
                    ) {                                                             // if no email destination selected
                        $('#flashbag-block').html(
                            '<div class="alert alert-danger fade in">'
                            + '<button class="close" type="button" data-dismiss="alert" aria-hidden="true">×</button>'
                            + '<span class="fa fa-exclamation-triangle"></span>'
                            + '{{ 'You must choice one recipient address at least.' | trans({}, 'mailsbackend') }}'
                            + '</div>'
                        );
                        return false;
                    } else if (false == sendTemplate && (textmessageContent == null || textmessageContent == '')) {
                        // if message content is null
                        $('#flashbag-block').html(
                            '<div class="alert alert-danger fade in">'
                            + '<button class="close" type="button" data-dismiss="alert" aria-hidden="true">×</button>'
                            + '<span class="fa fa-exclamation-triangle"></span>'
                            + '{{ 'You must write the content of the message.' | trans({}, 'mailsbackend') }}'
                            + '</div>'
                        );
                        return false;
                    } else if (true == sendTemplate && htmlTemplate == '') {
                        // if template content is null
                        $('#flashbag-block').html(
                            '<div class="alert alert-danger fade in">'
                            + '<button class="close" type="button" data-dismiss="alert" aria-hidden="true">×</button>'
                            + '<span class="fa fa-exclamation-triangle"></span>'
                            + '{{ 'You must write the content of the template.' | trans({}, 'mailsbackend') }}'
                            + '</div>'
                        );
                        return false;
                    }
                    else {
                        return true;
                    }
                });

                //  iCheck scripts for checkboxes and radiosfield
                $('.i-checks').iCheck({
                    checkboxClass: 'icheckbox_square-green',
                    radioClass: 'iradio_square-green',
                });

                //  Summernote scripts for textareas
                $('.summernote').summernote({
                    toolbar: [
                        ['style', ['bold', 'italic', 'underline', 'clear']],
                        ['fontsize', ['fontsize']],
                        ['color', ['color']],
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['insert', ['link', 'table']]
                    ]
                });
            });

            var editorContent;

            function initEditorContent() {
                if (editorContent instanceof CodeMirror) {
                    editorContent.refresh();
                } else {
                    var mixedMode = {
                        name: "htmlmixed",
                        scriptTypes: [{
                            matches: /\/x-handlebars-template|\/x-mustache/i,
                            mode: null
                        },
                            {
                                matches: /(text|application)\/(x-)?vb(a|script)/i,
                                mode: "vbscript"
                            }]
                    };
                    editorContent = CodeMirror.fromTextArea(document.getElementById("frontend_bundle_mails_send_htmlText"), {
                        mode: mixedMode,
                        lineNumbers: true,
                        matchBrackets: true,
                        styleActiveLine: true,
                        lineWrapping: true,
                        foldGutter: true,
                        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
                        extraKeys: {"Ctrl-Space": "autocomplete"},
                        theme: "dracula"
                    });
                    editorContent.setSize('100%', 500);
                }
            }

            var editorMetas;

            function initEditorMetas() {
                if (editorMetas instanceof CodeMirror) {
                    editorMetas.refresh();
                } else {
                    var mixedMode = {
                        name: "htmlmixed",
                        scriptTypes: [{
                            matches: /\/x-handlebars-template|\/x-mustache/i,
                            mode: null
                        },
                            {
                                matches: /(text|application)\/(x-)?vb(a|script)/i,
                                mode: "vbscript"
                            }]
                    };
                    editorMetas = CodeMirror.fromTextArea(document.getElementById("backendbundle_post_optionalMetas"), {
                        mode: mixedMode,
                        lineNumbers: true,
                        matchBrackets: true,
                        styleActiveLine: true,
                        lineWrapping: true,
                        foldGutter: true,
                        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
                        extraKeys: {"Ctrl-Space": "autocomplete"},
                        theme: "dracula"
                    });
                    editorMetas.setSize('100%', 400);
                }
            }

            var editorCSS;

            function initEditorCSS() {
                if (editorCSS instanceof CodeMirror) {
                    editorCSS.refresh();
                } else {
                    editorCSS = CodeMirror.fromTextArea(document.getElementById("backendbundle_post_customCss"), {
                        mode: "css",
                        lineNumbers: true,
                        matchBrackets: true,
                        styleActiveLine: true,
                        lineWrapping: true,
                        foldGutter: true,
                        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
                        extraKeys: {"Ctrl-Space": "autocomplete"},
                        theme: "dracula"
                    });
                    editorCSS.setSize('100%', 400);
                }
            }

            var editorJS;

            function initEditorJS() {
                if (editorJS instanceof CodeMirror) {
                    editorJS.refresh();
                } else {
                    editorJS = CodeMirror.fromTextArea(document.getElementById("backendbundle_post_customJs"), {
                        mode: "javascript",
                        lineNumbers: true,
                        matchBrackets: true,
                        styleActiveLine: true,
                        lineWrapping: true,
                        foldGutter: true,
                        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
                        extraKeys: {"Ctrl-Space": "autocomplete"},
                        theme: "dracula"
                    });
                    editorJS.setSize('100%', 400);
                }
            }

            function saveEditorContentCords() {
                if (editorContent instanceof CodeMirror) {
                    $('#editor-content-coords').val(JSON.stringify(editorContent.getDoc().getCursor()));
                }
            }

            function restoreEditorContentCords() {
                if (editorContent instanceof CodeMirror) {
                    var coords = JSON.parse($('#editor-content-coords').val());
                    var codeToInsert = $('#code-to-insert').html();
                    editorContent.focus();
                    editorContent.getDoc().setCursor(coords);
                    insertStringIntoEditor(editorContent, codeToInsert);
                    editorContent.refresh();
                    resetFileSelection();
                }
            }

            function attachFile() {
                var file = $(this).find('img');

                var fileHTML = file.wrap('<div>').parent().html();
                file.unwrap();

                resetFileSelection();

                file.closest('.file').css('border-color', '#0A0');
                file.closest('.file').css('box-shadow', '0 0 10px rgba(0,200,0,0.5)');

                $('#code-to-insert').html(fileHTML);
            }

            function resetFileSelection() {
                $('.file').css('border-color', '#e7eaec');
                $('.file').css('box-shadow', 'none');
            }

            function insertStringIntoEditor(editor, str, pos) {

                var selection = editor.getSelection();

                if (selection.length > 0) {
                    editor.replaceSelection(str);
                } else {

                    var doc = editor.getDoc();
                    var cursor = doc.getCursor();

                    if (pos === null || typeof pos === 'undefined') {
                        pos = {
                            line: cursor.line,
                            ch: cursor.ch
                        };
                    }

                    doc.replaceRange(str, pos);

                }

            }

            function dismissAtach() {
                $('#code-to-insert').html("");
                resetFileSelection();
            }

            function uploadFileAJAX() {
                var formTag = $('form[name="backendbundle_postimage"]');
                var formdata = new FormData(formTag[0]);

                $.ajax({
                    type: "POST",
                    url: Routing.generate("post_upload_image"),
                    processData: false,
                    contentType: false,
                    cache: false,
                    // contentType: 'application/x-www-form-urlencoded',
                    data: formdata
                }).done(function (html) {
                    // alert(html);
                    var parsedData = JSON.parse(html);
                    if (typeof parsedData['errorMessage'] !== 'undefined') {
                        if (typeof parsedData['errorMessage']['imgFile'] !== 'undefined' && parsedData['errorMessage']['imgFile'] != "") {
                            $('#img-file-error').closest('.form-group').addClass('has-error');
                            $('#img-file-error').removeClass('hidden');
                            $('#img-file-error > li').html(parsedData['errorMessage']['imgFile']);
                        } else {
                            $('#img-file-error').closest('.form-group').removeClass('has-error');
                            $('#img-file-error').addClass('hidden');
                        }

                        if (typeof parsedData['errorMessage']['name'] !== 'undefined' && parsedData['errorMessage']['name'] != "") {
                            $('#img-name-error').closest('.form-group').addClass('has-error');
                            $('#img-name-error').removeClass('hidden');
                            $('#img-name-error > li').html(parsedData['errorMessage']['name']);
                        } else {
                            $('#img-name-error').closest('.form-group').removeClass('has-error');
                            $('#img-name-error').addClass('hidden');
                        }
                    } else {
                        $('#img-file-error').closest('.form-group').removeClass('has-error');
                        $('#img-file-error').addClass('hidden');

                        $('#img-name-error').closest('.form-group').removeClass('has-error');
                        $('#img-name-error').addClass('hidden');

                        insertDataIntoTemplate(parsedData);
                    }
                });

                // reset form
                formTag[0].reset();
                return false;
            }

            function deleteFileAJAX() {
                var fileId = $(this).attr('data-file-id');

                $.ajax({
                    type: "GET",
                    url: Routing.generate("post_delete_image", {'id': fileId}),
                    processData: false,
                    contentType: false,
                    cache: false,
                    data: null
                }).done(function (html) {
                    var parsedData = JSON.parse(html);
                    removeDataFromTemplate(parsedData.id);
                });
                return false;
            }

            function insertDataIntoTemplate(dataFile) {
                var emptyTemplate = $('#file-template').html();
                var $template = $(emptyTemplate);

                $template.attr('id', 'file-box-' + dataFile.id);
                $template.find('.file-link .image img').attr('alt', dataFile.description);
                $template.find('.file-link .image img').attr('src', window.location.origin + '/images/post/gallery/' + dataFile.imgName);
                $template.find('.file-link .file-name').append(dataFile.imgName);

                $template.find('a.delete-image').attr('data-file-id', dataFile.id);

                $('#image-gallery-item-list').append($template);

                refreshBindEvents();
            }

            function removeDataFromTemplate(fileId) {
                $('#file-box-' + fileId).remove();
                refreshBindEvents();
            }

            function refreshBindEvents() {
                $('.file-link').unbind('click').on('click', attachFile);

                $('.file-box a.delete-image').unbind('click').on('click', deleteFileAJAX);

                $('#image-gallery-attach').unbind('click').on('click', function (e) {
                    restoreEditorContentCords();
                    $('#image-gallery').modal('hide');
                });

                $('#image-gallery-upload').unbind('click').on('click', uploadFileAJAX);
            }

            $(document).ready(function () {

                //  codemirror
                // Only load editors if tab has been clicked
                initEditorContent();
                $('#post-tabs > li > a[href="#post-basic"]').on('shown.bs.tab', function (e) {
                    initEditorContent();
                });
                $('#post-tabs > li > a[href="#post-optional-metas"]').on('shown.bs.tab', function (e) {
                    initEditorMetas();
                });
                $('#post-tabs > li > a[href="#post-custom-css"]').on('shown.bs.tab', function (e) {
                    initEditorCSS();
                });
                $('#post-tabs > li > a[href="#post-custom-js"]').on('shown.bs.tab', function (e) {
                    initEditorJS();
                });

                // image gallery modal events
                $('#image-gallery').unbind('show.bs.modal').on('show.bs.modal', function (e) {
                    saveEditorContentCords();
                });
                $('#image-gallery').unbind('hide.bs.modal').on('hide.bs.modal', dismissAtach);

                // refreshing bind events
                refreshBindEvents();
            });

        </script>
    {% endblock %}
