<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Administration | FuzenetCuba</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="">
        <meta name="author" content="">

        <!-- Fav and touch icons -->
        <link rel="shortcut icon" href="{{ asset('bundles/backend/ico/favicon.ico') }}">

        <link rel="stylesheet" href="{{ asset('bundles/backend/css/bootstrap.min.css') }}" type="text/css"/>
        <link rel="stylesheet" href="{{ asset('bundles/backend/css/animate.css') }}" type="text/css"/>
        <link rel="stylesheet" href="{{ asset('bundles/backend/css/style.css') }}" type="text/css"/>
        <link rel="stylesheet" href="{{ asset('bundles/backend/font-awesome/css/font-awesome.min.css') }}" type="text/css"/>

    </head>

    <body class="gray-bg">
        <noscript>
        <h1>You should ACTIVATE JavaScript in your browser</h1>
        </noscript>

        {# BEGIN Facebook #}

        <script>
          // This is called with the results from from FB.getLoginStatus().
          function statusChangeCallback(response) {
            console.log('statusChangeCallback');
            console.log(response);
            // The response object is returned with a status field that lets the
            // app know the current login status of the person.
            // Full docs on the response object can be found in the documentation
            // for FB.getLoginStatus().
            if (response.status === 'connected') {
              // Logged into your app and Facebook.
              testAPI();
            } else if (response.status === 'not_authorized') {
              // The person is logged into Facebook, but not your app.
              document.getElementById('status').innerHTML = 'Please log ' +
                'into this app.';
            } else {
              // The person is not logged into Facebook, so we're not sure if
              // they are logged into this app or not.
              document.getElementById('status').innerHTML = 'Please log ' +
                'into Facebook.';
            }
          }

          // This function is called when someone finishes with the Login
          // Button.  See the onlogin handler attached to it in the sample
          // code below.
          function checkLoginState() {
            FB.getLoginStatus(function(response) {
              statusChangeCallback(response);
            });
          }

          window.fbAsyncInit = function() {
          FB.init({
            appId      : '1160773883953962',
            cookie     : true,  // enable cookies to allow the server to access
                                // the session
            xfbml      : true,  // parse social plugins on this page
            version    : 'v2.2' // use version 2.2
          });

          // Now that we've initialized the JavaScript SDK, we call
          // FB.getLoginStatus().  This function gets the state of the
          // person visiting this page and can return one of three states to
          // the callback you provide.  They can be:
          //
          // 1. Logged into your app ('connected')
          // 2. Logged into Facebook, but not your app ('not_authorized')
          // 3. Not logged into Facebook and can't tell if they are logged into
          //    your app or not.
          //
          // These three cases are handled in the callback function.

          FB.getLoginStatus(function(response) {
            statusChangeCallback(response);
          });

          };

          // Load the SDK asynchronously
          (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
          }(document, 'script', 'facebook-jssdk'));

          // Here we run a very simple test of the Graph API after login is
          // successful.  See statusChangeCallback() for when this call is made.
          function testAPI() {
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me', function(response) {
              console.log('Successful login for: ' + response.name);
              document.getElementById('status').innerHTML =
                'Thanks for logging in, ' + response.name + '!';
            });
          }
        </script>

        <!--
          Below we include the Login Button social plugin. This button uses
          the JavaScript SDK to present a graphical Login button that triggers
          the FB.login() function when clicked.
        -->

        <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
        </fb:login-button>

        <div id="status">
        </div>

        {# END Facebook #}

        {# Block for FOSUserBundle actions #}
        {% block fos_user_content %}
            {% if error %}
                <div class="alert alert-danger fade in">
                    <button class="close" aria-hidden="true" data-dismiss="alert" type="button">×</button>
                    <strong>Error! </strong>
                    {{ error.message|trans({}, 'FOSUserBundle') }}
                </div>
            {% endif %}


            <div class="loginColumns animated fadeInDown">
                <div class="row">

                    <div class="col-md-6">
                        <h2 class="font-bold">Welcome to FuzenetCuba</h2>

                        <p>
                            Perfectly designed and precisely prepared admin theme with over 50 pages with extra new web app views.
                        </p>

                        <p>
                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.
                        </p>

                        <p>
                            When an unknown printer took a galley of type and scrambled it to make a type specimen book.
                        </p>

                        <p>
                            <small>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</small>
                        </p>

                    </div>
                    <div class="col-md-6">
                        <div class="ibox-content">
                            <form class="m-t" role="form" action="{{ path('fos_user_security_check') }}" method="post">
                                <div class="form-group">
                                    <input class="form-control" placeholder="Username" type="text" id="username" name="_username" value="{{ last_username }}" required="required" autofocus="true" >
                                </div>
                                <div class="form-group">
                                    <input class="form-control" placeholder="Password" type="password" id="password" name="_password" required="required" >
                                </div>
                                <button type="submit" name="_submit" value="{{ 'security.login.submit'|trans({}, 'FOSUserBundle') }}" class="btn btn-primary block full-width m-b" >{{ 'security.login.submit'|trans({}, 'FOSUserBundle') }}</button>

                                <a class="text-center" href="{{ path('fos_user_resetting_request') }}">
                                    <small>Forgot password?</small>
                                </a>

                                <p class="text-muted text-center">
                                    <small>Do not have an account?</small>
                                </p>
                                <a class="btn btn-sm btn-info btn-block" href="{{ path('fos_user_registration_register') }}">Create an account</a>
                                <input type="hidden" name="_csrf_token" value="{{ csrf_token }}" />
                            </form>
                            <p class="m-t">
                                <small></small>
                            </p>
                        </div>
                    </div>
                </div>
                <hr/>
                <div class="row">
                    <div class="col-md-6">
                        FuzenetCuba
                    </div>
                    <div class="col-md-6 text-right">
                        <small>Copyright © 2016 {#{ '-' ~ 'now'|date('Y') }#}</small>
                    </div>
                </div>
            </div>

        {% endblock %}
        {% block javascripts %}
        {% endblock %}
    </body>
</html>
